{"version":3,"sources":["assets/money.svg","assets/coin.svg","services/fetchApiCurrencies.js","actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/store.js","pages/Login.js","components/Form.js","components/ExpensesTable.js","components/Header.js","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchCurrencies","a","fetch","response","json","result","failedAction","error","type","fecthApiThunk","dispatch","filterCurrencies","Object","keys","filter","obj","currencies","INITIAL_STATE","email","userReducer","state","action","expenses","id","walletReducer","length","payload","el","rootReducer","combineReducers","user","wallet","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","disable","password","handleChange","bind","validateInputs","submitButton","event","preventDefault","this","props","successfulLogin","history","setState","push","target","name","value","test","className","src","coin","data-testid","placeholder","onChange","class","disabled","onClick","money","href","React","Component","connect","Form","description","currency","method","tag","exchangeRates","statesForm","newObject","htmlFor","map","key","requestApi","ExpensesTable","deleteExpense","console","log","Number","toFixed","ask","deleteExpenses","editExpense","Header","currentEmail","sum","price","reduce","acc","cur","Wallet","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ae953fc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/money.8538d153.svg\";","module.exports = __webpack_public_path__ + \"static/media/coin.84eb2fec.svg\";","const fetchCurrencies = async () => {\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const result = await response.json();\n  return result;\n};\n\nexport default fetchCurrencies;\n","import fetchCurrencies from '../services/fetchApiCurrencies';\n\nconst USER_EMAIL = 'USER_EMAIL';\nconst REQUEST_CURRENCIES = 'CURRENCIES';\nconst EXPENSES_FORM = 'EXPENSES_FORM';\nconst FAIL_REQUEST = 'FAIL_REQUEST';\nconst DELETE_EXPENSE = 'DELETE_EXPENSE';\nconst EDIT_EXPENSE = 'EDIT_EXPENSE';\n\nconst userEmail = ({ email }) => ({\n  type: USER_EMAIL,\n  email,\n});\n\nconst currenciesAction = (currencies) => ({\n  type: REQUEST_CURRENCIES,\n  currencies,\n});\n\nconst failedAction = (error) => ({\n  type: FAIL_REQUEST,\n  error,\n});\n\nconst expensesSuccess = (expenses) => ({\n  type: EXPENSES_FORM,\n  payload: expenses,\n});\n\nconst deleteExpenses = (id) => ({\n  type: DELETE_EXPENSE,\n  id,\n});\n\nconst editExpenses = () => ({\n  type: EDIT_EXPENSE,\n});\n\nconst fecthApiThunk = () => async (dispatch) => {\n  const result = await fetchCurrencies();\n  const filterCurrencies = Object.keys(result).filter((obj) => obj !== 'USDT');\n  try {\n    dispatch(currenciesAction(filterCurrencies));\n  } catch (error) {\n    dispatch(failedAction(error));\n  }\n};\n\nexport {\n  userEmail,\n  USER_EMAIL,\n  currenciesAction,\n  REQUEST_CURRENCIES,\n  fecthApiThunk,\n  EXPENSES_FORM,\n  FAIL_REQUEST,\n  expensesSuccess,\n  deleteExpenses,\n  DELETE_EXPENSE,\n  editExpenses,\n};\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { USER_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_EMAIL:\n    return {\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_CURRENCIES, EXPENSES_FORM, DELETE_EXPENSE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nlet id = 0;\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case EXPENSES_FORM:\n    id = state.expenses.length;\n    return {\n      ...state,\n      expenses: [...state.expenses, { id, ...action.payload }],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((el) => el.id !== action.id),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","// import user from './user';\n// import wallet from './wallet';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { userEmail } from '../actions/index';\nimport coin from '../assets/coin.svg'\nimport money from '../assets/money.svg'\nimport './Login.css'\nimport './mediaQueries.css'\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      disable: true,\n      email: '',\n      password: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validateInputs = this.validateInputs.bind(this);\n    this.submitButton = this.submitButton.bind(this);\n  }\n\n  submitButton(event) {\n    event.preventDefault();\n    const { successfulLogin, history } = this.props;\n    successfulLogin(this.state);\n    this.setState({ disable: true });\n    history.push('/carteira');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.validateInputs);\n  }\n\n  validateInputs() {\n    // Peguei esse Regex desse site https://www.w3resource.com/javascript/form/email-validation.php\n    const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const { password, email } = this.state;\n    const minLength = 6;\n\n    if (password.length >= minLength && emailRegex.test(email)) {\n      this.setState({ disable: false });\n    } else {\n      this.setState({ disable: true });\n    }\n  }\n\n  render() {\n    const {\n      disable,\n      email,\n      password,\n    } = this.state;\n    return (\n      <>\n      <header className=\"header-login\">\n        <img className=\"login-logo\" src={coin}/>\n        <form className=\"form-login\">\n          <input\n            className=\"input-login\"\n            data-testid=\"email-input\"\n            placeholder=\"email@email.com\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.handleChange }\n          />\n          <input\n            className=\"input-login\"\n            name=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"************\"\n            value={ password }\n            onChange={ this.handleChange }\n          />\n          <button\n            class=\"btn\"\n            type=\"submit\"\n            disabled={ disable }\n            onClick={ this.submitButton }\n          >\n            Login\n          </button>\n        </form>\n      </header>\n      <main className=\"main-login\">\n        <section className=\"section-container\">\n          <h1>Trybe Wallet</h1>\n          <p>Sua Carteira Digital</p>\n        </section>\n        <img className=\"img-money\" src={money} />\n      </main>\n        <section className=\"about-section\">\n          <div className=\"about\">\n            <h2>Desenvolvido por: Ramond Falcão</h2>\n          </div>\n          <div className=\"social-container\">\n            <a target=\"_blank\" href=\"https://www.linkedin.com/in/ramond-falc%C3%A3o-b528a1206/\"><img className=\"social-logo\" src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/linkedin/linkedin-original.svg\" /></a>\n            <a target=\"_blank\" href=\"https://github.com/ramondfalcao\"><img className=\"social-logo\" src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg\" /></a>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  successfulLogin: (state) => dispatch(userEmail(state)),\n});\n\nLogin.propTypes = {\n  successfulLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { expensesSuccess, fecthApiThunk } from '../actions';\nimport fetchCurrencies from '../services/fetchApiCurrencies';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitButton = this.submitButton.bind(this);\n  }\n\n  async submitButton(event) {\n    event.preventDefault();\n    const exchangeRates = await fetchCurrencies();\n    const { statesForm } = this.props;\n    const newObject = {\n      ...this.state,\n      exchangeRates,\n    };\n    statesForm(newObject);\n    this.setState({ value: 0 });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const { currencies } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    } = this.state;\n\n    return (\n      <form className=\"form-wallet\">\n        <label htmlFor=\"value\">\n          Value:\n          <input\n            className='input-wallet'\n            name=\"value\"\n            data-testid=\"value-input\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description:\n          <input\n            className='input-wallet'\n            id=\"description\"\n            name=\"description\"\n            data-testid=\"description-input\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Currency:\n          <select\n            className='input-wallet'\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            value={ currency }\n            onChange={ this.handleChange }\n          >\n            {currencies.map(\n              (el) => <option value={ el } key={ el }>{el}</option>,\n            )}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Payment method:\n          <select\n            className='input-wallet'\n            id=\"method\"\n            name=\"method\"\n            data-testid=\"method-input\"\n            value={ method }\n            onChange={ this.handleChange }\n          >\n            {methods.map(\n              (el) => <option value={ el } key={ el }>{el}</option>,\n            )}\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Category:\n          <select\n            className='input-wallet'\n            id=\"tag\"\n            name=\"tag\"\n            data-testid=\"tag-input\"\n            value={ tag }\n            onChange={ this.handleChange }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <button\n          className=\"add-btn\"\n          type=\"submit\"\n          onClick={ this.submitButton }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currencies: store.wallet.currencies,\n  expenses: store.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  statesForm: (state) => dispatch(expensesSuccess(state)),\n  requestApi: (state) => dispatch(fecthApiThunk(state)),\n});\n\nForm.propTypes = {\n  currencies: PropTypes.arrayOf.isRequired,\n  statesForm: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteExpenses, editExpenses } from '../actions';\nimport './ExpenseTable.css'\n\nclass ExpensesTable extends React.Component {\n  render() {\n    const { expenses, deleteExpense } = this.props;\n    console.log(expenses);\n    return (\n      <table className=\"table-wallet\">\n        <tbody>\n          <tr className=\"head-table\">\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </tbody>\n        {expenses.map((obj) => (\n          <tbody key={ obj.id }>\n            <tr>\n              <td>{obj.description}</td>\n              <td>{obj.tag}</td>\n              <td>{obj.method}</td>\n              <td>{Number(obj.value).toFixed(2)}</td>\n              <td>{obj.exchangeRates[obj.currency].name}</td>\n              <td>{Number(obj.exchangeRates[obj.currency].ask).toFixed(2)}</td>\n              <td>\n                {\n                  (Number(\n                    obj.exchangeRates[obj.currency].ask,\n                  ) * Number(obj.value)).toFixed(2)\n                }\n              </td>\n              <td>Real</td>\n              <td>\n                <button\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                  className=\"edit-btn\"\n                >\n                  Editar\n                </button>\n                <button\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  className=\"delete-btn\"\n                  onClick={ () => deleteExpense(obj.id) }\n                >\n                  Excluir\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  expenses: store.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (id) => dispatch(deleteExpenses(id)),\n  editExpense: (id) => dispatch(editExpenses(id)),\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport money from '../assets/money.svg';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { currentEmail, expenses } = this.props;\n    // console.log(this.props);\n    const valueExpenses = expenses.map((el) => {\n      const { currency } = el;\n      const price = el.exchangeRates[currency].ask;\n      const newValue = el.value * price;\n      return newValue;\n      // return console.log(el);\n    });\n\n    const sum = valueExpenses.reduce((acc, cur) => acc + cur, 0);\n\n    return (\n      <header className=\"header-wallet\">\n        <div data-testid=\"total-field\">{`💲: ${sum.toFixed(2)}`}</div>\n        <div data-testid=\"header-currency-field\">🪙: BRL</div>\n        <div data-testid=\"email-field\">{`👤: ${currentEmail}`}</div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currentEmail: store.user.email,\n  expenses: store.wallet.expenses,\n});\n\nHeader.propTypes = {\n  currentEmail: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthApiThunk } from '../actions';\nimport Form from '../components/Form';\nimport ExpensesTable from '../components/ExpensesTable';\nimport Header from '../components/Header';\nimport './Wallet.css'\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { requestApi } = this.props;\n    requestApi();\n  }\n\n  render() {\n    return (\n        <main className=\"main-wallet\">\n          <Header />\n            <div className='form-container'>\n              <Form />\n            </div>\n            <div className=\"table-container\">\n              <ExpensesTable />\n            </div>\n        </main>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  expenses: store.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestApi: () => dispatch(fecthApiThunk()),\n});\n\nWallet.propTypes = {\n  requestApi: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n      </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}